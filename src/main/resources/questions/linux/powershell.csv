question,answerRegex,expectedDisplay
"List all files and folders in current directory (Get-ChildItem).","^Get-ChildItem$","Get-ChildItem"
"List all files including hidden and system (-Force).","^Get-ChildItem\s+-Force$","Get-ChildItem -Force"
"List files recursively in all subdirectories (-Recurse).","^Get-ChildItem\s+-Recurse$","Get-ChildItem -Recurse"
"Show current working directory (Get-Location).","^Get-Location$","Get-Location"
"Change directory to parent folder (Set-Location ..).","^Set-Location\s+\.\.$","Set-Location .."
"Display contents of a text file (Get-Content).","^Get-Content\s+notes\.txt$","Get-Content notes.txt"
"Show first 10 lines of 'log.txt' (-TotalCount 10).","^Get-Content\s+log\.txt\s+-TotalCount\s+10$","Get-Content log.txt -TotalCount 10"
"Show last 20 lines of 'log.txt' (-Tail 20).","^Get-Content\s+log\.txt\s+-Tail\s+20$","Get-Content log.txt -Tail 20"
"Write 'Hello World' to console (Write-Host).","^Write-Host\s+['\"]Hello\s+World['\"]$","Write-Host 'Hello World'"
"Write output to file 'out.txt' (Out-File).","^Write-Output\s+['\"]text['\"]\s*\|\s*Out-File\s+out\.txt$","Write-Output 'text' | Out-File out.txt"
"Append output to existing file (-Append).","^Write-Output\s+['\"]extra['\"]\s*\|\s*Out-File\s+-Append\s+out\.txt$","Write-Output 'extra' | Out-File -Append out.txt"
"Search file 'errors.log' for the string 'timeout' (Select-String).","^Select-String\s+-Path\s+errors\.log\s+-Pattern\s+timeout$","Select-String -Path errors.log -Pattern timeout"
"Find files ending with .log recursively in C:\\Logs (-Recurse -Filter).","^Get-ChildItem\s+C:\\\\Logs\s+-Recurse\s+-Filter\s+\\*\.log$","Get-ChildItem C:\\Logs -Recurse -Filter *.log"
"Show running processes (Get-Process).","^Get-Process$","Get-Process"
"Stop process 'notepad' (Stop-Process -Name notepad).","^Stop-Process\s+-Name\s+notepad$","Stop-Process -Name notepad"
"Display system services (Get-Service).","^Get-Service$","Get-Service"
"Restart service 'Spooler' (Restart-Service -Name Spooler).","^Restart-Service\s+-Name\s+Spooler$","Restart-Service -Name Spooler"
"Get network adapter info (Get-NetAdapter).","^Get-NetAdapter$","Get-NetAdapter"
"Display IP configuration (Get-NetIPAddress).","^Get-NetIPAddress$","Get-NetIPAddress"
"Ping google.com (Test-Connection -Count 4).","^Test-Connection\s+google\.com\s+-Count\s+4$","Test-Connection google.com -Count 4"
"Download file with Invoke-WebRequest to 'setup.exe' (-OutFile).","^Invoke-WebRequest\s+-Uri\s+https?://[^\s]+\s+-OutFile\s+setup\.exe$","Invoke-WebRequest -Uri https://example.com/setup.exe -OutFile setup.exe"
"Call REST API and parse JSON (Invoke-RestMethod).","^Invoke-RestMethod\s+-Uri\s+https?://[^\s]+$","Invoke-RestMethod -Uri https://api.example.com"
"Show Windows version info (Get-ComputerInfo | Select WindowsProductName, WindowsVersion).","^Get-ComputerInfo\s*\|\s*Select\s+WindowsProductName,\s*WindowsVersion$","Get-ComputerInfo | Select WindowsProductName, WindowsVersion"
"Show disk space usage (Get-PSDrive -PSProvider FileSystem).","^Get-PSDrive\s+-PSProvider\s+FileSystem$","Get-PSDrive -PSProvider FileSystem"
"List installed programs (Get-WmiObject Win32_Product).","^Get-WmiObject\s+Win32_Product$","Get-WmiObject Win32_Product"
"Display event logs (Get-EventLog -LogName System -Latest 10).","^Get-EventLog\s+-LogName\s+System\s+-Newest\s+10$","Get-EventLog -LogName System -Newest 10"
"Export a list of services to CSV file.","^Get-Service\s*\|\s*Export-Csv\s+services\.csv\s+-NoTypeInformation$","Get-Service | Export-Csv services.csv -NoTypeInformation"
"Import data from CSV file and display.","^Import-Csv\s+services\.csv$","Import-Csv services.csv"
"Create a new directory 'Projects'.","^New-Item\s+-ItemType\s+Directory\s+-Path\s+Projects$","New-Item -ItemType Directory -Path Projects"
"Copy file 'a.txt' to 'C:\\Backup'.","^Copy-Item\s+a\.txt\s+C:\\\\Backup$","Copy-Item a.txt C:\\Backup"
"Move file 'log.txt' to 'C:\\Archive'.","^Move-Item\s+log\.txt\s+C:\\\\Archive$","Move-Item log.txt C:\\Archive"
"Remove file 'temp.txt'.","^Remove-Item\s+temp\.txt$","Remove-Item temp.txt"
"Remove directory 'OldLogs' recursively (-Recurse -Force).","^Remove-Item\s+OldLogs\s+-Recurse\s+-Force$","Remove-Item OldLogs -Recurse -Force"
"Compress 'project' folder to ZIP file (-DestinationPath).","^Compress-Archive\s+-Path\s+project\s+-DestinationPath\s+project\.zip$","Compress-Archive -Path project -DestinationPath project.zip"
"Extract ZIP file 'project.zip' to 'C:\\Extracted'.","^Expand-Archive\s+-Path\s+project\.zip\s+-DestinationPath\s+C:\\\\Extracted$","Expand-Archive -Path project.zip -DestinationPath C:\\Extracted"
"Display content of environment variable PATH.","^$Env:PATH$","$Env:PATH"
"Set environment variable MYNAME='William'.","^\$Env:MYNAME\s*=\s*['\"]William['\"]$","$Env:MYNAME = 'William'"
"List scheduled tasks (Get-ScheduledTask).","^Get-ScheduledTask$","Get-ScheduledTask"
"Run script 'backup.ps1' located in current directory (./).","^\./backup\.ps1$","./backup.ps1"
"Execute remote command via PowerShell remoting (Invoke-Command).","^Invoke-Command\s+-ComputerName\s+\S+\s+-ScriptBlock\s+\{[^\}]+\}$","Invoke-Command -ComputerName Server01 -ScriptBlock { Get-Service }"
"Start a background job that runs Get-Process (Start-Job).","^Start-Job\s+-ScriptBlock\s+\{Get-Process\}$","Start-Job -ScriptBlock {Get-Process}"
"List running background jobs (Get-Job).","^Get-Job$","Get-Job"
"Receive output from a completed job (Receive-Job -ID 1).","^Receive-Job\s+-Id\s+1$","Receive-Job -Id 1"
"Remove completed jobs (Remove-Job -State Completed).","^Remove-Job\s+-State\s+Completed$","Remove-Job -State Completed"
"Stop all jobs (Stop-Job *).","^Stop-Job\s+\*$","Stop-Job *"
"Display PowerShell version table ($PSVersionTable).","^\$PSVersionTable$","$PSVersionTable"
"Exit the PowerShell session.","^exit$","exit"
